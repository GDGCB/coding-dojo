<?php

namespace codingdojo;

class CalculatorTest extends \PHPUnit\Framework\TestCase
{
    /** @var  Calculator */
    private $calculator;

    public function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->calculator = new Calculator();
    }

    public function testAdd()
    {
        $this->assertEquals(1, $this->calculator->add("1"));
    }

    public function testEmptyString()
    {
        $this->assertEquals(0, $this->calculator->add(""));
    }

    public function testMultipleArguments(){
        $this->assertEquals(5, $this->calculator->add("2,3"));
        $this->assertEquals(9, $this->calculator->add("2,3,4"));
        $this->assertEquals(14, $this->calculator->add("2,3,4,5"));
    }


    public function testMultipleArgumentsSeparatedByNewline() {
        $this->assertEquals(9, $this->calculator->add("2
        3,4"));
    }

    /**
 * @expectedException \InvalidArgumentException
 */
    public function testDoesntAllowTwoSeparators()
    {
        $this->calculator->add("1,\n");
    }

    /**
     * @expectedException \InvalidArgumentException
     */
    public function testCountWithEmptyArgument()
    {
        $this->assertEquals(2, $this->calculator->add("2,\n"));
    }

    public function testDelimiters()
    {
        $this->assertEquals(3, $this->calculator->add("//;\n1;2"));
        $this->assertEquals(4, $this->calculator->add("//;\n1;3"));
        $this->assertEquals(4, $this->calculator->add("//delimiter\n1delimiter3"));

    }
//    public function testNewDelimiter() {
//        $this->assertEquals(6, $this->calculator->add("2;4"));
//    }
}